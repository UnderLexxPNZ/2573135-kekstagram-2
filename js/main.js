/*
напишите необходимые функции для создания массива из 25 сгенерированных объектов.
Каждый объект массива — описание фотографии, опубликованной пользователем.

Структура каждого объекта должна быть следующей:

    id, число — идентификатор опубликованной фотографии. Это число от 1 до 25.
    Идентификаторы не должны повторяться.

    url, строка — адрес картинки вида photos/{{i}}.jpg, где {{i}} — это число от 1 до 25.
    Адреса картинок не должны повторяться.

    description, строка — описание фотографии. Описание придумайте самостоятельно.

    likes, число — количество лайков, поставленных фотографии. Случайное число от 15 до 200.

    comments, массив объектов — список комментариев, оставленных другими пользователями
    к этой фотографии. Количество комментариев к каждой фотографии — случайное число от 0 до 30.
    Все комментарии генерируются случайным образом. Пример описания объекта с комментарием:

    {
      id: 135,
      avatar: 'img/avatar-6.svg',
      message: 'В целом всё неплохо. Но не всё.',
      name: 'Артём',
    }

У каждого комментария есть идентификатор — id — любое число. Идентификаторы не должны повторяться.

Поле avatar — это строка, значение которой формируется по правилу
img/avatar-{{случайное число от 1 до 6}}.svg. Аватарки подготовлены в директории img.

Для формирования текста комментария — message — вам необходимо взять одно или два случайных
предложения из представленных ниже:

Всё отлично!
В целом всё неплохо. Но не всё.
Когда вы делаете фотографию, хорошо бы убирать палец из кадра. В конце концов это просто непрофессионально.
Моя бабушка случайно чихнула с фотоаппаратом в руках и у неё получилась фотография лучше.
Я поскользнулся на банановой кожуре и уронил фотоаппарат на кота и у меня получилась фотография лучше.
Лица у людей на фотке перекошены, как будто их избивают. Как можно было поймать такой неудачный момент?!

Имена авторов также должны быть случайными. Набор имён для комментаторов составьте сами.
Подставляйте случайное имя в поле name.
*/
/*
// Набор сообщений
const MASSAGES [
  'Всё отлично!',
  'В целом всё неплохо. Но не всё.',
  'Когда вы делаете фотографию, хорошо бы убирать палец из кадра. В конце концов это просто непрофессионально.',
  'Моя бабушка случайно чихнула с фотоаппаратом в руках и у неё получилась фотография лучше.',
  'Я поскользнулся на банановой кожуре и уронил фотоаппарат на кота и у меня получилась фотография лучше.',
  'Лица у людей на фотке перекошены, как будто их избивают. Как можно было поймать такой неудачный момент?!',
];

// Набор имен
const NAMES [
  'Александ',
  'Светлана',
  'Игорь',
  'Екатерина',
  'Евгений',
  'Мария',
  'Сергей',
  'Зинаида',
  'Олег',
  'Татьяна',
  'Вадим',
  'Милана',
  'Демид',
  'Карина',
];

const createArrayObjects = () => {
  return {
    id: '',
    url: '',
    description: '',
    likes: '',
    comments: '',
  }
}
*/


const MESSAGE_SET = 'Всё отлично! В целом всё неплохо. Но не всё. Когда вы делаете фотографию, хорошо бы убирать палец из кадра. В конце концов это просто непрофессионально. Моя бабушка случайно чихнула с фотоаппаратом в руках и у неё получилась фотография лучше. Я поскользнулся на банановой кожуре и уронил фотоаппарат на кота и у меня получилась фотография лучше. Лица у людей на фотке перекошены, как будто их избивают. Как можно было поймать такой неудачный момент?!';
const NAMES_SET = 'Александ, Светлана, Игорь, Екатерина, Евгений, Мария, Сергей, Зинаида, Олег, Татьяна, Вадим, Милана, Демид, Карина';

const MIN_LIKES = 15;
const MAX_LIKES = 200;
const MAX_COMMENTS = 30;
const CREATED_PHOTO = 25;

//Функция получения случайного числа из заданного диапазона

const getRandomInteger = (a, b) => {

  const lower = Math.ceil(Math.min(a, b));
  const upper = Math.floor(Math.max(a, b));
  let previousResult = -1;
  return () => {
    const result = Math.floor(Math.random() * (upper - lower +1) + lower);
    // Исключения повторяющегося значения предыдущего вызова для коментариев
    if (previousResult !== result) {
      previousResult = result;
      return result;
    }
    return result === upper ? lower : result + 1;
  };

};

//Создание вложенного объекта Comments
const createComments = () => {
  let id = 1;
  const messageArray = MESSAGE_SET.split('. ');
  const nameArray = NAMES_SET.split('. ');
  const indexMessageArr = getRandomInteger (0, messageArray.length - 1);
  const indexNameArr = getRandomInteger (0, nameArray.length - 1);

  // Разобьем комментарии с разделителем - !
  massageArray.splice(0, 1, massageArray[0].split('! ')[0],massageArray[0].split('! ')[1]);
  return () => {
    const comment = {};
    const idAvatar = getRandomInteger (1, 6);
    comment.id = id;
    comment.avatar = 'img/avatar-${idAvatar()}.svg';
    comment.message = '${messageArray[indexMessageArr()]}. ${massageArray[indexMessageArr()]}';
    comment.name = '${nameArray[indexNameArr()]}';
    id++;
    return comment;
  };

};

//Количество коментариев
const numComments = getRandomInteger (0, MAX_COMMENTS);
//количество лайков
numLikes = getRandomInteger (MIN_LIKES, MAX_LIKES);

const createPhoto = () => {
  let id = 1;

  return () => {
    const photo = {};
    photo.id = id;
    photo.url = 'photo/${id}.jpg';
    photo.description = 'Фото №${id}';
    photo.likes = numLikes();
    photo.comments = Array.from({length : numComments()}, createComments());
    id++;
    return photo;

  };
};


const photoArray = Array.from ({length: CREATED_PHOTO}, createPhoto());
console.log(photoArray);
